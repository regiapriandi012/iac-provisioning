---
# Phase 4: Cluster Initialization (Sequential for masters, parallel for workers)
- name: "ðŸŽ¯ Initialize First Master - Phase 4A"
  hosts: k8s_masters[0]
  become: true
  gather_facts: false
  
  vars:
    temp_dir: "/tmp/k8s-setup"
    
  pre_tasks:
    - name: Start timer
      set_fact:
        phase_start_time: "{{ ansible_date_time.epoch }}"
    
    - name: Display initialization info
      debug:
        msg: |
          ðŸŽ¯ CLUSTER INITIALIZATION STARTING
          =================================
          Primary Master: {{ inventory_hostname }}
          Cluster Mode: {{ 'HA Multi-Master' if is_ha_cluster else 'Single Master' }}
          Control Plane Endpoint: {{ control_plane_endpoint }}
          
  tasks:
    - name: Check if cluster is already initialized
      stat:
        path: /etc/kubernetes/admin.conf
      register: k8s_initialized

    - name: Initialize Kubernetes cluster (Single Master)
      command: >
        kubeadm init
        --pod-network-cidr={{ pod_network_cidr }}
        --service-cidr={{ service_cidr }}
        --kubernetes-version=v{{ kubernetes_version }}
      when: not k8s_initialized.stat.exists and not is_ha_cluster
      register: kubeadm_init_single
      async: 300
      poll: 10

    - name: Initialize Kubernetes cluster (HA Multi-Master)
      command: >
        kubeadm init
        --control-plane-endpoint={{ control_plane_endpoint }}
        --upload-certs
        --pod-network-cidr={{ pod_network_cidr }}
        --service-cidr={{ service_cidr }}
        --kubernetes-version=v{{ kubernetes_version }}
      when: not k8s_initialized.stat.exists and is_ha_cluster
      register: kubeadm_init_ha
      async: 300
      poll: 10

    - name: Extract join command for workers
      shell: kubeadm token create --print-join-command
      register: join_command_raw
      when: not k8s_initialized.stat.exists

    - name: Set join command fact
      set_fact:
        join_command: "{{ join_command_raw.stdout }}"
      when: not k8s_initialized.stat.exists

    - name: Extract certificate key for HA masters
      shell: kubeadm init phase upload-certs --upload-certs | tail -1
      register: certificate_key_raw
      when: not k8s_initialized.stat.exists and is_ha_cluster

    - name: Set certificate key fact
      set_fact:
        certificate_key: "{{ certificate_key_raw.stdout }}"
      when: not k8s_initialized.stat.exists and is_ha_cluster

    - name: Create .kube directory
      file:
        path: "{{ ansible_env.HOME }}/.kube"
        state: directory
        mode: '0755'

    - name: Copy admin.conf to .kube/config
      copy:
        src: /etc/kubernetes/admin.conf
        dest: "{{ ansible_env.HOME }}/.kube/config"
        remote_src: yes
        owner: root
        group: root
        mode: '0644'

  post_tasks:
    - name: Calculate phase duration
      set_fact:
        phase_end_time: "{{ ansible_date_time.epoch }}"
        phase_duration: "{{ ansible_date_time.epoch | int - phase_start_time | int }}"

    - name: Display completion status
      debug:
        msg: |
          âœ… PRIMARY MASTER INITIALIZATION COMPLETED
          ==========================================
          Host: {{ inventory_hostname }}
          Duration: {{ phase_duration }}s
          Status: Ready for additional masters and workers

# Phase 4B: Join Additional Masters (Can run in parallel with each other)
- name: "ðŸŽ¯ Join Additional Masters - Phase 4B"
  hosts: k8s_masters[1:]
  become: true
  gather_facts: false
  strategy: free  # Masters can join in parallel
  serial: 0
  
  tasks:
    - name: Start timer
      set_fact:
        phase_start_time: "{{ ansible_date_time.epoch }}"

    - name: Check if node is already joined
      stat:
        path: /etc/kubernetes/admin.conf
      register: node_joined

    - name: Join additional master nodes
      command: >
        {{ hostvars[groups['k8s_masters'][0]]['join_command'] }}
        --control-plane
        --certificate-key {{ hostvars[groups['k8s_masters'][0]]['certificate_key'] }}
      when: 
        - not node_joined.stat.exists
        - is_ha_cluster
        - hostvars[groups['k8s_masters'][0]]['join_command'] is defined
      async: 300
      poll: 10

    - name: Create .kube directory
      file:
        path: "{{ ansible_env.HOME }}/.kube"
        state: directory
        mode: '0755'
      when: not node_joined.stat.exists and is_ha_cluster

    - name: Copy admin.conf to .kube/config
      copy:
        src: /etc/kubernetes/admin.conf
        dest: "{{ ansible_env.HOME }}/.kube/config"
        remote_src: yes
        owner: root
        group: root
        mode: '0644'
      when: not node_joined.stat.exists and is_ha_cluster

    - name: Calculate phase duration
      set_fact:
        phase_end_time: "{{ ansible_date_time.epoch }}"
        phase_duration: "{{ ansible_date_time.epoch | int - phase_start_time | int }}"

    - name: Display completion status
      debug:
        msg: |
          âœ… ADDITIONAL MASTER JOINED
          ==========================
          Host: {{ inventory_hostname }}
          Duration: {{ phase_duration }}s
          Status: Master node ready

# Phase 4C: Join Worker Nodes (All workers can join in parallel)
- name: "ðŸŽ¯ Join Worker Nodes - Phase 4C"
  hosts: k8s_workers
  become: true
  gather_facts: false
  strategy: free  # Workers can join in parallel
  serial: 0       # No limit on parallel execution
  
  tasks:
    - name: Start timer
      set_fact:
        phase_start_time: "{{ ansible_date_time.epoch }}"

    - name: Check if node is already joined
      stat:
        path: /etc/kubernetes/kubelet.conf
      register: worker_joined

    - name: Join worker nodes to cluster
      command: "{{ hostvars[groups['k8s_masters'][0]]['join_command'] }}"
      when: 
        - not worker_joined.stat.exists
        - hostvars[groups['k8s_masters'][0]]['join_command'] is defined
      async: 180
      poll: 5

    - name: Calculate phase duration
      set_fact:
        phase_end_time: "{{ ansible_date_time.epoch }}"
        phase_duration: "{{ ansible_date_time.epoch | int - phase_start_time | int }}"

    - name: Display completion status
      debug:
        msg: |
          âœ… WORKER NODE JOINED
          =====================
          Host: {{ inventory_hostname }}
          Duration: {{ phase_duration }}s
          Status: Worker node ready